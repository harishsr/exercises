// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function Fibonacci( maxValue ) {
  this.maxValue = maxValue;
  this.sequence = [];

  this.calculateSequence = fibonacciCalculation(this.sequence, this.maxValue);
  this.evenNumbersInSequence = evenNumbers(this.sequence);
  this.sumOfEvenValues = addArray(this.evenNumbersInSequence);
}

function fibonacciCalculation(arrayIn, maxValue){
  var newNum = 0;
  while(newNum < maxValue) {
    var num1 = (arrayIn[arrayIn.length - 1] || 0);
    var num2 = (arrayIn[arrayIn.length - 2] || 1);
    newNum = num1 + num2;
    arrayIn.push(newNum);
  }
  return arrayIn;
}

function evenNumbers(arrayIn){
  var evenNums = [];
  if (arrayIn.length < 1){
    return evenNums;
  } else {
    for (i=0; i < arrayIn.length; i++){
      if (arrayIn[i] % 2 === 0){
        evenNums.push(arrayIn[i]);
      }
    }
  }
  return evenNums;
}

function addArray( arrayIn ){
  return arrayIn.reduce(function(a, b){
    return a += b;
  });
}

var sequence = new Fibonacci(4000000);
console.log(sequence.sumOfEvenValues);
